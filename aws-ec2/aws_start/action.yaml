name: 'Setup Performance Controller and Injectors AWS machines'
description: 'Setup Performance Controller and Injectors AWS machines'
inputs: 
  server_size :
    description: 'AWS Server Size'
    required: true
    default: 't2.micro'
  image_id : 
    description: 'AWS AMI ID'
    required: true
    default: 'ami-'#provide the ami number of aws
  key_name :
    description: 'SSH Key Name stored in AWS'
    required: true
    default: 'NONPROD_AWS_EC2_Test'
  iam_role : 
    description: 'IAM role to attach to EC2 server for SSM'
    required: true
    default: 'nonprod-jmeter-iam-role'
  security_group :
    description: 'AWS EC2 security group to limit input and output routes'
    required: true
    default: ' ' #provide secutiry group details
  subnet : 
    description: 'AWS EC2 subnet'
    required: true
    default: ' ' # provide subnet details
  injector_count : 
    description: 'Number of injectors to start'
    required: true
    default: 1

runs: 
  using: "composite"
  steps:
    -name: Start Controller
     shell: bash
     run: |
        aws ec2 run-intsances\
        --instance-type "${{ inputs.server_sizee }}" \
        --key-name ${{ inputs.key_name }}\
        --subnet-id ${{ inputs.subnet }} \
        --image-id $ ${{ inputs.image_id }} \
        --security-group-ids ${{ inputs.security_group }} > machine_setup.txt

    -name: Start Injector(s)
     shell: bash
     run: |
        aws ec2 run-intsances --count "${{ inputs.injector_count }}" \
        --instance-type "${{ inputs.server_sizee }}" \
        --key-name ${{ inputs.key_name }}\
        --subnet-id ${{ inputs.subnet }} \
        --image-id $ ${{ inputs.image_id }} \
        --security-group-ids ${{ inputs.security_group }} > injectors_setup.txt

    -name: Extract Data from New Servers
     shell: bash
     run: |
       #Get Controller Instance ID
       cat machine_setup.txt | jq -r '.Instances[].InstanceId' > intsance_id.txt
       cat injectors_setup.txt

       #Store the injector ip addresses as a list
       cat ./injectors_setup.txt | jq -r '.Instances[].PrivateIpAddress' > ./injector_ip_addresses.txt

       #Store the injector IP addresses as a csv for JMeter -R remote injectors command
       cat ./injectors_setup.txt | jq -r '.Instances[].PrivateIpAddress' | paste -sd"," - > ./injector_ip_csv.csv

       #Store the injector instance ids as a list
       cat ./injectors_setup.txt | jq -r '.Instances[].InstanceId' > ./injector_instance_id.txt

       #Store the injector instance ids as a csv for any SSM commands
       cat ./injectors_setup.txt | jq -r '.Instances[].InstanceId' | paste -sd"," - >./injector_instance_id_csv.csv

       #Store the injector instance IDs as a space seperated for any SSM commands
       cat ./injectors_setup.txt | jq -r '.Instances[].InstanceId' | paste -sd" " - > ./injector_instance_id_space.csv



       #Concat all the instance ids into one file
       cat instance_id.txt > combined_instance_id.txt
       cat injector_instance_id.txt >> combined_instance_id.txt

       #Store the instance IDs in a EC2 stop command file
       sed -e :a -e '$!N; s/\n\/ /; ta' combined_instance_id.txt > stop_instances.txt
       cat combined_instance_id.txt
       cat stop_instances.txt


    -name: Upload artifact
     uses: actions/upload-artifact@v3
     with: 
       name: save_aws_instances_details
       path: \
         *.csv
         *.txt
    -name: Tag controller and Injectors
     shell: bash
     run: |
         #Add name tag to Controller
         aws ec2 create-tags --resources $(cat instance_id.txt) --tags Key="Name",Value="controller-performance-load-test-$(date +%d/%m/%Y-%H:%M:%S)"
         #Loop listing Connections command to Injectors
         #Read the file line by line and store each line as a variable

         while IFS= read -r line; do
           # instance_id="$line"
           aws ec2 create-tags --resources "$line" --tags Key="Name",Value="injector-performance-load-test-$(date +%d/%m/%Y-%H:%M:%S)"
         done <./injector_instance_id.txt

    -name: All EC2 instances, Wait for start up an, Add User profile
     shell: bash
     run: | 
       #Loop listing connections command to Injectors
       #Read the file line by line and store each line as a variable
       while IFS= read -r line; do 
         instance_id="$line"
         aws ec2 wait instance-status-ok --instance-ids ${insatnce_id}
         aws ec2 wait system-ok --instance-ids ${instance_id}
         #Add role to instace - APPEARS TO BE 1 INSTANCE AT A TIME!!!!
         aws ec2 associate-iam-instance-profile --instance-id ${instance_id} --iam-instance-profile Name=${{ inputs.iam_role }}
       done < ./combined_instance_id.txt

    -name: All EC2 instances, Wait for start up an, Add User profile
     shell : bash
     run: | 
       # #Injectors

       #echo "Printing information commands below
       # pwd
       #ls -lah
       #grep -iR "dev.key"

       while IFS= read -r line; do
         instance_id="$line"
         # echo "Printing information commands below" 
         #pwd
         #ls -lah
         #grep -iR "dev.key"
         echo "Line of injector_instance_id.txt ${instance_id}"
         until aws ssm describe-instance-infromation --filters "Key=InstanceIds,Values=${instance_id}" | grep -q 'AgentVersion';
         do 
           sleep 5 
         done
       done < ./combined_instance_id.txt
       sleep 60
